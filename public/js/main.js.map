{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./resources/assets/js/app/BinarySearchTree.ts","webpack:///./resources/assets/js/app/BinaryTreeNode.ts","webpack:///./resources/assets/js/app/Marker.model.ts","webpack:///./resources/assets/js/app/app.component.css","webpack:///./resources/assets/js/app/app.component.html","webpack:///./resources/assets/js/app/app.component.ts","webpack:///./resources/assets/js/app/app.module.ts","webpack:///./resources/assets/js/app/map/map.component.html","webpack:///./resources/assets/js/app/map/map.component.ts","webpack:///./resources/assets/js/app/marker-details/marker-details.component.html","webpack:///./resources/assets/js/app/marker-details/marker-details.component.ts","webpack:///./resources/assets/js/app/marker-filters/marker-filter/marker-filter.component.html","webpack:///./resources/assets/js/app/marker-filters/marker-filter/marker-filter.component.ts","webpack:///./resources/assets/js/app/marker-filters/marker-filters.component.html","webpack:///./resources/assets/js/app/marker-filters/marker-filters.component.ts","webpack:///./resources/assets/js/app/markers.service.ts","webpack:///./resources/assets/js/environments/environment.ts","webpack:///./resources/assets/js/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BinaryTreeNode } from \"./BinaryTreeNode\";\r\n\r\nexport class BinarySearchTree {\r\n    constructor(public rootNode?: BinaryTreeNode) {}\r\n\r\n    public insert(key: number, value: number) {\r\n        if (this.rootNode == undefined) {\r\n            this.rootNode = new BinaryTreeNode(key, value);\r\n        } else {\r\n            this.rootNode.insert(new BinaryTreeNode(key, value))\r\n        }\r\n    }\r\n\r\n    public lookup(key: number) {\r\n        if (this.rootNode != undefined) {\r\n            if (this.rootNode.key == key) {\r\n                return this.rootNode;\r\n            } else {\r\n                return this.rootNode.lookup(key);\r\n            }\r\n        } else {\r\n            return this.rootNode;\r\n        }\r\n    }\r\n\r\n    public toString() {\r\n        return this.rootNode.toString();\r\n    }\r\n}","export class BinaryTreeNode {\r\n    constructor(\r\n        public key: number,\r\n        public value: number,\r\n        public left: BinaryTreeNode = null,\r\n        public right: BinaryTreeNode = null\r\n    ) {}\r\n\r\n    public insert(node: BinaryTreeNode) {\r\n        if (node.key < this.key) {\r\n            if (this.left == null) {\r\n                this.left = node;\r\n            } else {\r\n                this.left.insert(node);\r\n            }\r\n        } else {\r\n            if (this.right == null) {\r\n                this.right = node;\r\n            } else {\r\n                this.right.insert(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    public lookup(key: number) {\r\n        if (this.key == key) {\r\n            return this;\r\n        } else {\r\n            if (key < this.key) {\r\n                if (this.left == null) {\r\n                    return null;\r\n                } else {\r\n                    return this.left.lookup(key);\r\n                }\r\n            } else {\r\n                if (this.right == null) {\r\n                    return null;\r\n                } else {\r\n                    return this.right.lookup(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public toString() {\r\n        let left = (this.left)\r\n            ? this.left.toString()\r\n            : 'null';\r\n        let right = (this.right)\r\n            ? this.right.toString()\r\n            : 'null';\r\n\r\n        return \"{key: \" + this.key + \", value: \" + this.value + \", left: \" + left + \", right: \" + right + \"}\";\r\n    }\r\n}","export class Marker {\r\n    constructor(\r\n        public id: number,\r\n        public marker_type_id: number,\r\n        public marker_name: string,\r\n        public x: number,\r\n        public y: number,\r\n        public z: number,\r\n        public marker_description?: string,\r\n        public source?: string\r\n    ) {}\r\n}","module.exports = \"\"","module.exports = \"<div id=\\\"app\\\">\\r\\n    <!--<div id=\\\"menu\\\"></div>-->\\r\\n\\r\\n    <!--<div id=\\\"search\\\"></div>-->\\r\\n\\r\\n    <app-marker-filters\\r\\n        [markerCategories]=\\\"markerCategories\\\"\\r\\n        [markerCategoriesIndex]=\\\"markerCategoriesIndex\\\"\\r\\n        [selectedMarkerTypes]=\\\"selectedMarkerTypes\\\"\\r\\n        (selectedMarkerTypesChanged)=\\\"onSelectedMarkerTypesChanged($event)\\\"\\r\\n    ></app-marker-filters>\\r\\n\\r\\n    <app-marker-details [selectedMarker]=\\\"selectedMarker\\\"></app-marker-details>\\r\\n\\r\\n    <app-map\\r\\n        [markerTypes]=\\\"markerTypes\\\"\\r\\n        [markerTypesIndex]=\\\"markerTypesIndex\\\"\\r\\n        [selectedMarkerTypes]=\\\"selectedMarkerTypes\\\"\\r\\n        [selectedMarker]=\\\"selectedMarker\\\"\\r\\n        (markerSelected)=\\\"onMarkerSelected($event)\\\"\\r\\n    ></app-map>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Marker } from \"./marker.model\";\r\nimport { MarkerType } from \"./MarkerType.model\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BinarySearchTree } from \"./BinarySearchTree\";\r\nimport { MarkerCategory } from \"./MarkerCategory.model\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    markerTypes: MarkerType[];\r\n    markerTypesIndex: BinarySearchTree = new BinarySearchTree();\r\n\r\n    markerCategories: MarkerCategory[];\r\n    markerCategoriesIndex: BinarySearchTree = new BinarySearchTree();\r\n\r\n    selectedMarkerTypes: number[] = [1401];\r\n    selectedMarker: Marker;\r\n\r\n    constructor(private http:HttpClient) {}\r\n\r\n    ngOnInit() {\r\n        this.http.get<MarkerType[]>('/marker-types')\r\n            .pipe(map(\r\n                (markerTypes) => {\r\n                    this.markerTypes = markerTypes;\r\n                    this.generateSearchTree(this.markerTypesIndex, this.markerTypes);\r\n                }\r\n            ))\r\n            .subscribe();\r\n\r\n        this.http.get<MarkerCategory[]>('/marker-categories')\r\n            .pipe(map(\r\n                (markerCategories) => {\r\n                    this.markerCategories = markerCategories;\r\n                    this.generateSearchTree(this.markerCategoriesIndex, this.markerCategories);\r\n                }\r\n            ))\r\n            .subscribe();\r\n    }\r\n\r\n    onMarkerSelected(marker: Marker) {\r\n        this.selectedMarker = marker;\r\n    }\r\n\r\n    onSelectedMarkerTypesChanged(selectedMarkerTypes: number[]) {\r\n        this.selectedMarkerTypes = Object.assign([], selectedMarkerTypes);\r\n    }\r\n\r\n    private generateSearchTree(binaryTree: BinarySearchTree, terms: any[]) {\r\n        if (binaryTree.rootNode != undefined && terms.length > 0) {\r\n            let midpoint = Math.ceil(terms.length / 2);\r\n\r\n            for (let index = 0; index < midpoint; index++) {\r\n                binaryTree.insert(terms[midpoint - index].id, midpoint - index);\r\n\r\n                if (midpoint - index !== midpoint + index) {\r\n                    binaryTree.insert(terms[midpoint + index].id, midpoint + index);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from \"./map/map.component\";\r\nimport { MarkerFiltersComponent } from \"./marker-filters/marker-filters.component\";\r\nimport { MarkerDetailsComponent } from \"./marker-details/marker-details.component\";\r\n\r\nimport { MarkersService } from \"./markers.service\";\r\nimport { MarkerFilterComponent } from \"./marker-filters/marker-filter/marker-filter.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        MapComponent,\r\n        MarkerFiltersComponent,\r\n        MarkerFilterComponent,\r\n        MarkerDetailsComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule\r\n    ],\r\n    providers: [\r\n        MarkersService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<div id=\\\"map\\\"></div>\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from \"@angular/core\";\r\n\r\nimport * as Leaflet from 'leaflet/dist/leaflet.js';\r\nimport { MarkersService } from \"../markers.service\";\r\nimport { MarkerType } from \"../MarkerType.model\";\r\nimport { Marker } from \"../Marker.model\";\r\nimport { BinarySearchTree } from \"../BinarySearchTree\";\r\n\r\n@Component({\r\n    selector: 'app-map',\r\n    templateUrl: './map.component.html'\r\n})\r\nexport class MapComponent implements OnInit, OnChanges {\r\n    @Input() markerTypes: MarkerType[];\r\n    @Input() markerTypesIndex: BinarySearchTree;\r\n\r\n    @Input() selectedMarkerTypes: number[];\r\n    private previousSelectedMarkerTypes: number[] = [];\r\n    @Input() selectedMarker: Marker;\r\n\r\n    @Output() markerSelected = new EventEmitter<Marker>();\r\n\r\n    public isMapGenerated: boolean = false;\r\n    private map: Leaflet;\r\n    private mapLayers = {};\r\n\r\n    constructor(private markersService: MarkersService) {}\r\n\r\n    ngOnInit() {\r\n        this.generateMap();\r\n    }\r\n\r\n    private generateMap() {\r\n        if (!this.isMapGenerated) {\r\n            this.map = Leaflet.map('map', {\r\n                crs: Leaflet.CRS.Simple,\r\n                continuousWorld: false,\r\n                noWrap: true,\r\n                minZoom: 0,\r\n                maxZoom: 6,\r\n                maxBoundsViscosity: 0.75,\r\n                zoomControl: false\r\n            })\r\n                .on('load', () => {\r\n                    this.isMapGenerated = true;\r\n                })\r\n                .setView([-245.7, 156.25])\r\n                .setZoom(4);\r\n\r\n            this.map.setMaxBounds(Leaflet.LatLngBounds(\r\n                this.map.unproject([-62.5, 437.5], 0),\r\n                this.map.unproject([437.5, -62.5], 0)\r\n            ));\r\n\r\n            Leaflet.tileLayer('../hyrule/{z}/{y}/{x}.png', {\r\n                tileSize: 375\r\n            }).addTo(this.map);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.hasOwnProperty('selectedMarkerTypes')) {\r\n            this.selectedMarkerTypesChanged(changes.selectedMarkerTypes);\r\n        }\r\n    }\r\n\r\n    selectedMarkerTypesChanged(values: { currentValue: number[], previousValue: number[], firstChange: boolean }) {\r\n        if (!values.firstChange) {\r\n            let added = values.currentValue.filter(item => this.previousSelectedMarkerTypes.indexOf(item) < 0);\r\n            let removed = this.previousSelectedMarkerTypes.filter(item => values.currentValue.indexOf(item) < 0);\r\n\r\n            if (added.length > 0) {\r\n                this.markersService.getByType(added).subscribe((markers: Marker[]) => {\r\n                    this.addMarkers(markers);\r\n                });\r\n            }\r\n\r\n            if (removed.length > 0) {\r\n                this.removeMarkers(removed);\r\n            }\r\n        } else {\r\n            this.markersService.getByType(values.currentValue).subscribe((markers: Marker[]) => {\r\n                this.addMarkers(markers);\r\n            });\r\n        }\r\n\r\n        this.previousSelectedMarkerTypes = Object.assign([], this.selectedMarkerTypes);\r\n    }\r\n\r\n    private addMarkers(markers: Marker[]) {\r\n        if (markers !== null) {\r\n            for (let marker of markers) {\r\n                if (!this.mapLayers.hasOwnProperty(marker.marker_type_id.toString())) {\r\n                    this.mapLayers[marker.marker_type_id.toString()] = Leaflet.layerGroup();\r\n                }\r\n\r\n                let markerTypeGroup = this.mapLayers[marker.marker_type_id.toString()];\r\n\r\n                if (this.selectedMarkerTypes.includes(marker.marker_type_id)) {\r\n                    let markerTypeId = (this.markerTypesIndex.lookup(marker.marker_type_id));\r\n\r\n                    if (markerTypeId != undefined && markerTypeId.hasOwnProperty('value')) {\r\n                        let markerType = this.markerTypes[markerTypeId.value];\r\n\r\n                        let newMarker = Leaflet.marker([\r\n                            -this.normalizeCoord(marker.z),\r\n                            this.normalizeCoord(marker.x)\r\n                        ], {\r\n                            icon: Leaflet.icon({\r\n                                iconUrl: markerType.icon,\r\n                                iconSize: [32, 32]\r\n                            }),\r\n                            title: marker.marker_name,\r\n                            zIndexOffset: Math.floor(marker.y),\r\n                        })\r\n                            .on('click', (event) => {\r\n                                this.showMarkerDetails(event.target);\r\n                            });\r\n                        newMarker.markerId = marker.id;\r\n                        newMarker.layerId = marker.marker_type_id;\r\n\r\n                        markerTypeGroup.addLayer(newMarker);\r\n                    }\r\n                }\r\n\r\n                this.map.addLayer(markerTypeGroup);\r\n            }\r\n        }\r\n    }\r\n\r\n    private normalizeCoord(coord: number) {\r\n        return (coord + 6000) * 0.03125\r\n    }\r\n\r\n    public showMarkerDetails(target) {\r\n        this.markersService.getById(target.markerId).subscribe(\r\n            (marker: Marker) => {\r\n                this.selectedMarker = marker;\r\n                this.markerSelected.emit(marker);\r\n                this.map.panTo([\r\n                    -this.normalizeCoord(marker.z),\r\n                    this.normalizeCoord(marker.x)\r\n                ])\r\n            }\r\n        );\r\n    }\r\n\r\n    private removeMarkers(removed: number[]) {\r\n        for (let layerId of removed) {\r\n            if (this.map.hasLayer(this.mapLayers[layerId.toString()])) {\r\n                this.mapLayers[layerId.toString()].clearLayers();\r\n                this.map.removeLayer(this.mapLayers[layerId.toString()]);\r\n                delete this.mapLayers[layerId.toString()];\r\n            }\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<aside id=\\\"marker-details\\\" *ngIf=\\\"selectedMarker\\\">\\r\\n    <div id=\\\"marker-details-close-wrapper\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" id=\\\"marker-details-close\\\" (click)=\\\"closeDialog()\\\">\\r\\n            <img src=\\\"/images/icons/markers/close.svg\\\" alt=\\\"\\\">\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"marker-details-wrapper\\\">\\r\\n        <h3>{{ selectedMarker.marker_name }}</h3>\\r\\n\\r\\n        <p>{{ selectedMarker.marker_description }}</p>\\r\\n\\r\\n        <div class=\\\"marker-meta\\\">\\r\\n            <small>\\r\\n                <div>&lt;{{ selectedMarker.x }}, {{ selectedMarker.y }}, {{ selectedMarker.z }}&gt;</div>\\r\\n                <div>Marker ID: {{ selectedMarker.id }}</div>\\r\\n                <div>Source: {{ selectedMarker.source }}</div>\\r\\n            </small>\\r\\n        </div>\\r\\n    </div>\\r\\n</aside>\"","import { Component, Input } from \"@angular/core\";\r\nimport { Marker } from \"../Marker.model\";\r\n\r\n@Component({\r\n    selector: 'app-marker-details',\r\n    templateUrl: './marker-details.component.html'\r\n})\r\nexport class MarkerDetailsComponent {\r\n    @Input() selectedMarker: Marker = null;\r\n\r\n    closeDialog() {\r\n        this.selectedMarker = null;\r\n    }\r\n}","module.exports = \"<div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let markerCategory of markerCategories\\\">\\r\\n    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"marker-type-{{ markerCategory.category.id }}\\\"\\r\\n           name=\\\"marker-type-{{ markerCategory.category.id }}\\\"\\r\\n           (change)=\\\"toggleType(markerCategory)\\\" [value]=\\\"markerCategory.category.id\\\" [checked]=\\\"markerCategory.category.selected\\\">\\r\\n    <label class=\\\"custom-control-label\\\" for=\\\"marker-type-{{ markerCategory.category.id }}\\\">{{ markerCategory.category.marker_category_name }}</label>\\r\\n\\r\\n    <app-marker-filter [markerCategories]=\\\"markerCategory.children\\\" (categorySelected)=\\\"onCategorySelected($event)\\\"></app-marker-filter>\\r\\n</div>\"","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { MarkerCategory } from \"../../MarkerCategory.model\";\r\n\r\n@Component({\r\n    selector: 'app-marker-filter',\r\n    templateUrl: './marker-filter.component.html'\r\n})\r\nexport class MarkerFilterComponent {\r\n    @Input() markerCategories: {category: MarkerCategory, children: MarkerCategory[]}[];\r\n    @Output() categorySelected = new EventEmitter<any>();\r\n\r\n    toggleType(selectedCategory: {category: MarkerCategory, children: MarkerCategory[]}) {\r\n        console.log(selectedCategory);\r\n    }\r\n\r\n    toggleChildren(categories, isSelected = true) {\r\n        console.log(categories);\r\n\r\n        const returnCategories = [];\r\n\r\n        for (let category of categories) {\r\n            category.category.selected = isSelected;\r\n            returnCategories.push(category.category);\r\n\r\n            if (category.children.length > 0) {\r\n                let categoryChildren = this.toggleChildren(category.children);\r\n                for (let categoryChild of categoryChildren) {\r\n                    returnCategories.push(categoryChild.category);\r\n                }\r\n            }\r\n        }\r\n\r\n        return returnCategories;\r\n    }\r\n\r\n    onCategorySelected(selectedCategory) {\r\n        this.toggleType(selectedCategory);\r\n    }\r\n}","module.exports = \"<div id=\\\"marker-filters\\\" [ngClass]=\\\"{'is-open': isOpen}\\\">\\r\\n    <div id=\\\"markers-filter-wrapper\\\">\\r\\n        <div class=\\\"container-fluid\\\" *ngIf=\\\"isOpen\\\">\\r\\n            <main>\\r\\n                <!--<app-marker-filter [markerCategories]=\\\"markerCategoryTree\\\" (categorySelected)=\\\"mainChanged($event)\\\"></app-marker-filter>-->\\r\\n                <div>\\r\\n                    <h4>Korok Seeds</h4>\\r\\n\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"korokLocation\\\" name=\\\"korokLocation\\\" [checked]=\\\"korokLocation.selected\\\" (change)=\\\"toggleType(korokLocation)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"korokLocation\\\">Korok Seeds</label>\\r\\n                    </div>\\r\\n\\r\\n                    <h4>Locations</h4>\\r\\n\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"divineBeasts\\\" name=\\\"divineBeasts\\\" [checked]=\\\"divineBeasts.selected\\\" (change)=\\\"toggleType(divineBeasts)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"divineBeasts\\\">Divine Beasts</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"shrines\\\" name=\\\"shrines\\\" [checked]=\\\"shrines.selected\\\" (change)=\\\"toggleType(shrines)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"shrines\\\">Shrines</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"stables\\\" name=\\\"stables\\\" [checked]=\\\"stables.selected\\\" (change)=\\\"toggleType(stables)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"stables\\\">Stables</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"towers\\\" name=\\\"towers\\\" [checked]=\\\"towers.selected\\\" (change)=\\\"toggleType(towers)\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"towers\\\">Towers</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </main>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"marker-filter-toggle\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"toggleDialog()\\\">\\r\\n                <img src=\\\"/images/icons/markers/markers.svg\\\" *ngIf=\\\"!isOpen\\\" alt=\\\"\\\">\\r\\n                <img src=\\\"/images/icons/markers/close.svg\\\" *ngIf=\\\"isOpen\\\" alt=\\\"\\\">\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from \"@angular/core\";\r\nimport { MarkerCategory } from \"../MarkerCategory.model\";\r\nimport { BinarySearchTree } from \"../BinarySearchTree\";\r\n\r\n@Component({\r\n    selector: 'app-marker-filters',\r\n    templateUrl: './marker-filters.component.html'\r\n})\r\nexport class MarkerFiltersComponent implements OnChanges {\r\n    @Input() markerCategories: MarkerCategory[];\r\n    @Input() markerCategoriesIndex: BinarySearchTree;\r\n    private markerCategoryTreeMade = false;\r\n    public markerCategoryTree: MarkerCategory[];\r\n\r\n    @Input() private selectedMarkerTypes: number[];\r\n\r\n    @Output() selectedMarkerTypesChanged = new EventEmitter<number[]>();\r\n\r\n    public korokLocation = {\r\n        types: [3],\r\n        selected: false\r\n    };\r\n    public divineBeasts = {\r\n        types: [6],\r\n        selected: false\r\n    };\r\n    public shrines = {\r\n        types: [4],\r\n        selected: false\r\n    };\r\n    public stables = {\r\n        types: [8],\r\n        selected: false\r\n    };\r\n    public towers = {\r\n        types: [10],\r\n        selected: false\r\n    };\r\n\r\n    public isOpen = true;\r\n\r\n    mainChanged(categories) {\r\n        console.log(categories);\r\n        // this.selectedMarkerTypesChanged.emit(category.id);\r\n    }\r\n\r\n    toggleType(category) {\r\n        category.selected = !category.selected;\r\n        // const index = (this.markerCategoriesIndex.lookup(parseInt(event.target.value))).value;\r\n        // this.markerCategories[index].selected = !this.markerCategories[index].selected;\r\n        // const selectedTypes = this.selectedMarkerTypes;\r\n        //\r\n        // for (let markerType of this.markerCategories[index].marker_types) {\r\n        //     if (this.markerCategories[index].selected) {\r\n        //         if (!selectedTypes.includes(markerType.id)) {\r\n        //             selectedTypes.push(markerType.id);\r\n        //         }\r\n        //     } else {\r\n        //         if (selectedTypes.includes(markerType.id)) {\r\n        //             selectedTypes.splice(selectedTypes.indexOf(markerType.id), 1);\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        if (category.selected) {\r\n            console.log(category.types);\r\n            this.selectedMarkerTypesChanged.emit(category.types);\r\n        }\r\n    }\r\n\r\n    toggleDialog() {\r\n        this.isOpen = !this.isOpen;\r\n    }\r\n\r\n    makeCategoryTree() {\r\n        if (this.markerCategories == undefined) {\r\n            return;\r\n        }\r\n\r\n        this.markerCategoryTree = this.getChildCategories(null);\r\n\r\n        console.log(this.markerCategoryTree);\r\n\r\n        this.markerCategoryTreeMade = true;\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (!this.markerCategoryTreeMade) {\r\n            this.makeCategoryTree();\r\n        }\r\n    }\r\n\r\n    private getChildCategories(parentId: number) {\r\n        const children = [];\r\n\r\n        for (let markerCategory of this.markerCategories) {\r\n            if (markerCategory.parent_category_id == parentId) {\r\n                children.push({\r\n                    category: markerCategory,\r\n                    children: this.getChildCategories(markerCategory.id)\r\n                })\r\n            }\r\n        }\r\n\r\n        return children;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { Marker } from \"./marker.model\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MarkersService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    public getByType(types: number[]) {\r\n        const typeString = types.join(',');\r\n\r\n        return this.http.get<Marker[]>('/markers?type=' + typeString)\r\n            .pipe(map(\r\n                (markers) => {\r\n                    return markers;\r\n                }\r\n            ));\r\n    }\r\n\r\n    public getById(id: number) {\r\n        return this.http.get<Marker>('/markers/' + id)\r\n            .pipe(map(\r\n                (marker) => {\r\n                    return marker;\r\n                }\r\n            ))\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.log(err));\r\n"],"sourceRoot":""}