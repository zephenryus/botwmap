{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./resources/assets/js/app/app.component.css","webpack:///./resources/assets/js/app/app.component.html","webpack:///./resources/assets/js/app/app.component.ts","webpack:///./resources/assets/js/app/app.module.ts","webpack:///./resources/assets/js/app/map/map.component.css","webpack:///./resources/assets/js/app/map/map.component.html","webpack:///./resources/assets/js/app/map/map.component.ts","webpack:///./resources/assets/js/app/map/map.service.ts","webpack:///./resources/assets/js/app/markers/markers.service.ts","webpack:///./resources/assets/js/environments/environment.ts","webpack:///./resources/assets/js/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<header></header>\\r\\n\\r\\n<main id=\\\"app\\\">\\r\\n    <app-map></app-map>\\r\\n</main>\\r\\n\\r\\n<footer></footer>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'example';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { MapService } from './map/map.service';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        MapComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule\r\n    ],\r\n    providers: [\r\n        MapService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\\r\\n@import 'https://unpkg.com/leaflet@1.3.4/dist/leaflet.css';\\n/*@import '../../../../../node_modules/leaflet/dist/leaflet.css';*/\\n#map {\\r\\n    height: 100vh;\\r\\n    width: 100vw;\\r\\n}\"","module.exports = \"<div id=\\\"map\\\"></div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MapService } from \"./map.service\";\r\n\r\n@Component({\r\n    selector: 'app-map',\r\n    templateUrl: './map.component.html',\r\n    styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n    constructor(private mapService: MapService) {}\r\n\r\n    ngOnInit() {\r\n        this.mapService.generateMap();\r\n    }\r\n}\r\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\r\nimport * as Leaflet from 'leaflet/dist/leaflet.js';\r\nimport { Marker } from \"../markers/marker\";\r\nimport { MarkersService } from \"../markers/markers.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MapService {\r\n    map: Leaflet;\r\n    isMapGenerated: boolean;\r\n    markers: Marker[];\r\n    markersSubscription: Subscription;\r\n\r\n    constructor(private markersService: MarkersService) {}\r\n\r\n    generateMap() {\r\n        if (!this.isMapGenerated) {\r\n            this.map = Leaflet.map('map', {\r\n                crs: Leaflet.CRS.Simple,\r\n                continuousWorld: false,\r\n                minZoom: 0,\r\n                maxZoom: 7,\r\n                noWrap: true,\r\n                maxBoundsViscosity: 0.75,\r\n                bounds: Leaflet.bounds(\r\n                    Leaflet.point(-5000, -4000),\r\n                    Leaflet.point(5000, 4000)\r\n                ),\r\n                zoomControl: false\r\n            })\r\n                .on('load', () => {\r\n                    this.isMapGenerated = true;\r\n                    this.markersService.getMarkers()\r\n                })\r\n                .on('zoomend', (e) => {\r\n                    if (this.map) {\r\n                        const zoom = this.map.getZoom();\r\n                        console.log(zoom);\r\n                    }\r\n                })\r\n                .setView([-131.375, 84.125])\r\n                .setZoom(5);\r\n\r\n            const southWest = this.map.unproject([0, 200], 0);\r\n            const northEast = this.map.unproject([200, 0], 0);\r\n            const bounds = new Leaflet.LatLngBounds(southWest, northEast);\r\n            this.map.setMaxBounds(bounds);\r\n\r\n            Leaflet.tileLayer('../hyrule/{z}/{y}/{x}.png', {\r\n                tileSize: 200\r\n            }).addTo(this.map);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Marker } from \"./marker\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MarkersService {\n    constructor(private http: HttpClient) {\n    }\n\n    getMarkers(): Observable<Marker[]> {\n        return this.http.get<Marker[]>('/markers');\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.log(err));\r\n"],"sourceRoot":""}