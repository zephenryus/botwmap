<<<<<<< HEAD
{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./resources/assets/js/app/app.component.css","webpack:///./resources/assets/js/app/app.component.html","webpack:///./resources/assets/js/app/app.component.ts","webpack:///./resources/assets/js/app/app.module.ts","webpack:///./resources/assets/js/app/map/map.component.css","webpack:///./resources/assets/js/app/map/map.component.html","webpack:///./resources/assets/js/app/map/map.component.ts","webpack:///./resources/assets/js/app/map/map.service.ts","webpack:///./resources/assets/js/app/marker-details/marker-details.component.html","webpack:///./resources/assets/js/app/marker-details/marker-details.component.ts","webpack:///./resources/assets/js/app/marker-filter/marker-filter.component.html","webpack:///./resources/assets/js/app/marker-filter/marker-filter.component.ts","webpack:///./resources/assets/js/app/marker-types/marker-type.ts","webpack:///./resources/assets/js/app/marker-types/marker-types.service.ts","webpack:///./resources/assets/js/app/markers/marker.ts","webpack:///./resources/assets/js/app/markers/markers.service.ts","webpack:///./resources/assets/js/environments/environment.ts","webpack:///./resources/assets/js/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<main id=\\\"app\\\">\\r\\n    <header id=\\\"map-header\\\">\\r\\n        <div id=\\\"header-wrapper\\\">\\r\\n            <div id=\\\"main-menu\\\" class=\\\"d-flex align-items-center\\\">\\r\\n                <button class=\\\"btn\\\">\\r\\n                    <div class=\\\"menu-icon flex-shrink-1\\\"></div>\\r\\n                </button>\\r\\n\\r\\n                <div id=\\\"search\\\" class=\\\"flex-grow-1\\\">\\r\\n                    <input type=\\\"search\\\" id=\\\"q\\\" name=\\\"q\\\" placeholder=\\\"Hyrule Castle...\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </header>\\r\\n\\r\\n    <app-marker-filter></app-marker-filter>\\r\\n\\r\\n    <app-marker-details></app-marker-details>\\r\\n\\r\\n    <div id=\\\"loader\\\">\\r\\n        <div id=\\\"loader-orb-wrapper\\\">\\r\\n            <div id=\\\"loader-orb-0\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-1\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-2\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-3\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-4\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-5\\\" class=\\\"loader-orb\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <app-map></app-map>\\r\\n</main>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { MapService } from './map/map.service';\r\nimport { MarkerDetailsComponent } from \"./marker-details/marker-details.component\";\r\nimport { MarkerFilterComponent } from \"./marker-filter/marker-filter.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { MarkersService } from \"./markers/markers.service\";\r\nimport { MarkerTypesService } from \"./marker-types/marker-types.service\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        MapComponent,\r\n        MarkerDetailsComponent,\r\n        MarkerFilterComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule\r\n    ],\r\n    providers: [\r\n        MapService,\r\n        MarkersService,\r\n        MarkerTypesService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\\r\\n@import 'https://unpkg.com/leaflet@1.3.4/dist/leaflet.css';\\n/*@import '../../../../../node_modules/leaflet/dist/leaflet.css';*/\\n#map {\\r\\n    height: 100vh;\\r\\n    width: 100vw;\\r\\n}\"","module.exports = \"<div id=\\\"map\\\"></div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MapService } from \"./map.service\";\r\n\r\n@Component({\r\n    selector: 'app-map',\r\n    templateUrl: './map.component.html',\r\n    styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n    constructor(private mapService: MapService) {}\r\n\r\n    ngOnInit() {\r\n        this.mapService.generateMap();\r\n    }\r\n}\r\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\r\nimport * as Leaflet from 'leaflet/dist/leaflet.js';\r\nimport { Marker } from \"../markers/marker\";\r\nimport { MarkersService } from \"../markers/markers.service\";\r\nimport { MarkerTypesService } from \"../marker-types/marker-types.service\";\r\nimport { MarkerType } from \"../marker-types/marker-type\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MapService implements OnInit, OnDestroy {\r\n    map: Leaflet;\r\n    isMapGenerated: boolean;\r\n    markers: Marker[];\r\n\r\n    selectedLayersSubscription: Subscription;\r\n    layers = [];\r\n    selectedLayers: MarkerType[];\r\n    defaultShowMarkers = [];\r\n\r\n    constructor(\r\n        private markersService: MarkersService,\r\n        private markerTypesService: MarkerTypesService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.selectedLayersSubscription.unsubscribe();\r\n    }\r\n\r\n    generateMap() {\r\n        if (!this.isMapGenerated) {\r\n            this.map = Leaflet.map('map', {\r\n                crs: Leaflet.CRS.Simple,\r\n                continuousWorld: false,\r\n                minZoom: 0,\r\n                maxZoom: 6,\r\n                noWrap: true,\r\n                maxBoundsViscosity: 0.75,\r\n                zoomControl: false\r\n            })\r\n                .on('load', () => {\r\n                    this.isMapGenerated = true;\r\n\r\n                    this.markersService.getMarkers(this.selectedLayers)\r\n                        .subscribe(\r\n                            (markers: Marker[]) => {\r\n                                this.markers = markers;\r\n                                this.loadMarkers();\r\n                            }\r\n                        );\r\n\r\n                    // this.markerTypesService.setSelectedMarkerTypes(\r\n                    //\r\n                    // );\r\n\r\n                    this.markerTypesService.onSelectedMarkerTypesChanged\r\n                        .subscribe(\r\n                            (markerTypes: MarkerType[]) => {\r\n                                this.selectedLayers = markerTypes;\r\n                                this.filterLayers(this.selectedLayers);\r\n                            }\r\n                        );\r\n                })\r\n                .on('zoomend', (e) => {\r\n                    if (this.map) {\r\n                        const zoom = this.map.getZoom();\r\n                    }\r\n                })\r\n                // .setView([-131.375, 84.125])\r\n                .setView([-245.7, 156.25])\r\n                .setZoom(4);\r\n\r\n            const southWest = this.map.unproject([-62.5, 437.5], 0);\r\n            const northEast = this.map.unproject([437.5, -62.5], 0);\r\n            const bounds = new Leaflet.LatLngBounds(southWest, northEast);\r\n            this.map.setMaxBounds(bounds);\r\n\r\n            Leaflet.tileLayer('../hyrule/{z}/{y}/{x}.png', {\r\n                tileSize: 375\r\n            }).addTo(this.map);\r\n        }\r\n    }\r\n\r\n    loadMarkers() {\r\n        if (this.markers.length > 0) {\r\n            for (let marker of this.markers) {\r\n                if (this.layers.hasOwnProperty(marker.marker_type_id)) {\r\n                    this.layers[marker.marker_type_id].push(marker);\r\n                } else {\r\n                    this.layers[marker.marker_type_id] = [marker];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.loadLayers();\r\n    }\r\n\r\n    loadLayers() {\r\n        let newLayers = [];\r\n        let markerTypes = [];\r\n\r\n        for (let layer in this.layers) {\r\n            let layerMarkers = [];\r\n            markerTypes.push(layer);\r\n\r\n            if (this.layers.hasOwnProperty(layer)) {\r\n                for (let marker in this.layers[layer]) {\r\n                    if (this.layers[layer].hasOwnProperty(marker)) {\r\n                        console.log(this.layers[layer][marker]);\r\n                        this.layers[layer][marker].pointer = Leaflet.marker(\r\n                            [\r\n                                // ((coordinate + 6000) / 12000) * 375\r\n                                (this.layers[layer][marker].z + 6000) * -0.03125,\r\n                                (this.layers[layer][marker].x + 6000) * 0.03125\r\n                            ],\r\n                            {\r\n                                icon: Leaflet.icon({\r\n                                    iconUrl: this.layers[layer][marker].type.icon,\r\n                                    iconSize: [72, 72],\r\n                                }),\r\n                                title: this.layers[layer][marker].marker_name,\r\n                                riseOnHover: true\r\n                            }\r\n                        )\r\n                            .on('click', (event) => {\r\n                                this.showMarkerDetails(parseInt(event.target.markerId));\r\n                            });\r\n\r\n                        // this.layers[layer][marker].pointer = Leaflet.circle(\r\n                        //     [\r\n                        //         // ((coordinate + 6000) / 12000) * 375\r\n                        //         (this.layers[layer][marker].z + 6000) * -0.03125,\r\n                        //         (this.layers[layer][marker].x + 6000) * 0.03125\r\n                        //     ],\r\n                        //     {\r\n                        //         color: 'red',\r\n                        //         fillColor: 'red',\r\n                        //         radius: 0.1,\r\n                        //         title: this.layers[layer][marker].marker_name\r\n                        //     }\r\n                        // )\r\n                        //     .on('click', (event) => {\r\n                        //         this.showMarkerDetails(parseInt(event.target.markerId));\r\n                        //     });\r\n\r\n                        this.layers[layer][marker].pointer.markerId = this.layers[layer][marker].id;\r\n                        this.layers[layer][marker].pointer.layerId = layer;\r\n                        layerMarkers.push(this.layers[layer][marker].pointer);\r\n                    }\r\n                }\r\n\r\n                newLayers[layer] = Leaflet.layerGroup(layerMarkers);\r\n            }\r\n        }\r\n\r\n        this.layers = newLayers;\r\n        this.filterLayers(this.markerTypesService.getMarkerTypesById(markerTypes));\r\n\r\n        for (let layer in this.layers) {\r\n            if (this.layers.hasOwnProperty(layer)) {\r\n                this.layers[layer].addTo(this.map);\r\n            }\r\n        }\r\n    }\r\n\r\n    filterLayers(showTypes: MarkerType[]) {\r\n        for (let layer in this.layers) {\r\n            if (showTypes[layer] !== undefined) {\r\n                if (!this.map.hasLayer(this.layers[layer])) {\r\n                    this.layers[layer].addTo(this.map)\r\n                }\r\n            } else {\r\n                if (this.map.hasLayer(this.layers[layer])) {\r\n                    this.layers[layer].remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    showMarkerDetails(markerId: number) {\r\n        this.markersService.setSelectedMarker(this.markers[markerId]);\r\n        this.map.panTo([\r\n            this.getCoordY(this.markers[markerId].z),\r\n            this.getCoordX(this.markers[markerId].x)\r\n        ]);\r\n    }\r\n\r\n    getCoordX(x: number) {\r\n        return (x + 6000) * 0.03125\r\n    }\r\n\r\n    getCoordY(x: number) {\r\n        return (x + 6000) * -0.03125\r\n    }\r\n}\r\n","module.exports = \"<aside id=\\\"marker-details\\\" [class.open]=\\\"isOpen\\\" *ngIf=\\\"selectedMarker\\\">\\r\\n    <div id=\\\"marker-details-wrapper\\\" (click)=\\\"openDetails()\\\">\\r\\n        <button id=\\\"marker-details-close\\\" class=\\\"btn\\\" (click)=\\\"closeDetails()\\\">Close</button>\\r\\n        <h3>{{ selectedMarker.type.marker_type_name }}</h3>\\r\\n\\r\\n\\r\\n\\r\\n        <div>&lt;{{ selectedMarker.x }}, {{ selectedMarker.y }}, {{ selectedMarker.z }}&gt;</div>\\r\\n\\r\\n        <!--<p>{{ selectedMarker.id }}</p>-->\\r\\n        <!--<p>{{ selectedMarker.map_region_id }}</p>-->\\r\\n        <!--<p>{{ selectedMarker.marker_name }}</p>-->\\r\\n        <!--<p>{{ selectedMarker.marker_sub_category_id }}</p>-->\\r\\n        <!--<p>{{ selectedMarker.marker_type_id }}</p>-->\\r\\n        <div class=\\\"marker-meta\\\">\\r\\n            <small>\\r\\n                <div>Marker ID: {{ selectedMarker.id }}</div>\\r\\n                <div>Source: {{ selectedMarker.source }}</div>\\r\\n            </small>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</aside>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MarkersService } from \"../markers/markers.service\";\r\nimport { Marker } from \"../markers/marker\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'app-marker-details',\r\n    templateUrl: './marker-details.component.html'\r\n})\r\nexport class MarkerDetailsComponent implements OnInit {\r\n    selectedMarker: Marker;\r\n    markerSelectSubscription: Subscription;\r\n    isOpen = false;\r\n\r\n    constructor (private  markersService: MarkersService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.markerSelectSubscription = this.markersService.onMarkerSelected.subscribe(\r\n            (marker: Marker) => {\r\n                this.selectedMarker = marker;\r\n            }\r\n        )\r\n    }\r\n\r\n    openDetails() {\r\n        this.isOpen = true;\r\n    }\r\n\r\n    closeDetails() {\r\n        this.isOpen = false;\r\n        this.selectedMarker = null;\r\n    }\r\n}","module.exports = \"<aside id=\\\"map-modifiers\\\">\\r\\n    <button id=\\\"layers\\\" class=\\\"btn btn-primary\\\" (click)=\\\"toggleDialog()\\\">\\r\\n        L\\r\\n    </button>\\r\\n\\r\\n    <div id=\\\"marker-filters\\\" *ngIf=\\\"isOpen\\\">\\r\\n        <main style=\\\"background: white;\\\">\\r\\n            <div class=\\\"d-flex flex-wrap justify-content-between\\\">\\r\\n                <div class=\\\"layer-selector\\\" (click)=\\\"toggleAllLayers()\\\">\\r\\n                    <div class=\\\"d-block text-center marker-type-label\\\">\\r\\n                        <img class=\\\"marker-type-icon\\\" src=\\\"images/icons/markers/default.png\\\" alt=\\\"\\\">\\r\\n                        <div class=\\\"marker-type-name\\\">All</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div *ngFor=\\\"let markerLayer of markerLayers; let i = index;\\\" class=\\\"layer-selector\\\" [class.selected]=\\\"markerLayer.selected\\\">\\r\\n                    <label for=\\\"{{ markerLayer.id }}\\\" class=\\\"d-block text-center marker-type-label\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"{{ markerLayer.id }}\\\" name=\\\"{{ markerLayer.id }}\\\" (change)=\\\"toggleLayer(i)\\\"\\r\\n                               [checked]=\\\"markerLayer.selected\\\" class=\\\"d-none\\\">\\r\\n                        <img class=\\\"marker-type-icon\\\" src=\\\"{{ markerLayer.icon }}\\\" alt=\\\"\\\">\\r\\n                        <div class=\\\"marker-type-name\\\">{{ markerLayer.marker_type_name }}</div>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </main>\\r\\n    </div>\\r\\n</aside>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MarkerTypesService } from \"../marker-types/marker-types.service\";\r\nimport { MarkerType } from \"../marker-types/marker-type\";\r\nimport { MapService } from \"../map/map.service\";\r\n\r\n@Component({\r\n    selector: 'app-marker-filter',\r\n    templateUrl: './marker-filter.component.html'\r\n})\r\nexport class MarkerFilterComponent implements OnInit {\r\n    isOpen = false;\r\n    markerLayers = [];\r\n    selectedLayers = [];\r\n\r\n    constructor(\r\n        private markerTypesService: MarkerTypesService,\r\n        private mapService: MapService\r\n    ) {}\r\n\r\n    toggleDialog() {\r\n        this.isOpen = !this.isOpen;\r\n    }\r\n\r\n    toggleLayer(index: number) {\r\n        this.markerLayers[index].selected = !this.markerLayers[index].selected;\r\n        this.filterMarkers();\r\n    }\r\n\r\n    filterMarkers() {\r\n        let layers = [];\r\n\r\n        for (let markerLayer of this.markerLayers) {\r\n            if (markerLayer.selected) {\r\n                layers.push(markerLayer.id);\r\n            }\r\n        }\r\n\r\n        this.markerTypesService.setSelectedMarkerTypes(\r\n            this.markerTypesService.getMarkerTypesById(layers)\r\n        );\r\n    }\r\n\r\n    markSelected() {\r\n        for (let markerLayer of this.markerLayers) {\r\n            if (this.selectedLayers.indexOf(markerLayer) > -1) {\r\n                if (this.markerLayers.hasOwnProperty(markerLayer)) {\r\n                    this.markerLayers[markerLayer].selected = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleAllLayers() {\r\n        if (this.selectedLayers.length === this.markerLayers.length) {\r\n            this.selectNoLayers();\r\n        } else {\r\n            this.selectAllLayers();\r\n        }\r\n    }\r\n\r\n    selectAllLayers() {\r\n        this.selectedLayers = [];\r\n\r\n        for (let markerLayer of this.markerLayers) {\r\n            this.selectedLayers.push(markerLayer.id);\r\n            markerLayer.selected = true;\r\n        }\r\n\r\n        this.filterMarkers();\r\n    }\r\n\r\n    selectNoLayers() {\r\n        this.selectedLayers = [];\r\n\r\n        for (let markerLayer of this.markerLayers) {\r\n            markerLayer.selected = false;\r\n        }\r\n\r\n        this.filterMarkers();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.markerTypesService.getMarkerTypes()\r\n            .subscribe(\r\n                (markerTypes: MarkerType[]) => {\r\n                    this.markerLayers = markerTypes;\r\n                    this.markSelected();\r\n                }\r\n            )\r\n    }\r\n}","export class MarkerType {\r\n    id: number;\r\n    marker_type_name: string;\r\n    marker_type_slug: string;\r\n    icon: string;\r\n    marker_type_description: string;\r\n    selected: boolean;\r\n\r\n    constructor(markerType: {\r\n        id: number,\r\n        marker_type_name: string,\r\n        marker_type_slug: string,\r\n        icon: string,\r\n        marker_type_description: string,\r\n        selected?: boolean\r\n    }) {\r\n        this.id = markerType.id;\r\n        this.marker_type_name = markerType.marker_type_name;\r\n        this.marker_type_slug = markerType.marker_type_slug;\r\n        this.icon = markerType.icon;\r\n        this.marker_type_description = markerType.marker_type_description;\r\n        this.selected = markerType.selected || false;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { MarkerType } from \"./marker-type\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MarkerTypesService {\r\n    markerTypes: MarkerType[] = [];\r\n    selectedMarkerTypes: MarkerType[] = [];\r\n\r\n    onSelectedMarkerTypesChanged = new Subject<MarkerType[]>();\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getMarkerTypes() {\r\n        return this.http.get<MarkerType[]>('/marker-types')\r\n            .pipe(map(\r\n                (markerTypes) => {\r\n                    for (let markerType in markerTypes) {\r\n                        if (markerTypes.hasOwnProperty(markerType)) {\r\n                            markerTypes[markerType] = new MarkerType(markerTypes[markerType]);\r\n                            this.markerTypes.push(markerTypes[markerType]);\r\n                        }\r\n                    }\r\n\r\n                    return markerTypes;\r\n                }\r\n            ));\r\n    }\r\n\r\n    setSelectedMarkerTypes(types: MarkerType[]) {\r\n        this.selectedMarkerTypes = types;\r\n        this.onSelectedMarkerTypesChanged.next(this.selectedMarkerTypes);\r\n    }\r\n\r\n    getMarkerTypesById(ids: number[]) {\r\n        let markerTypes: MarkerType[] = [];\r\n\r\n        for (let markerType of this.markerTypes) {\r\n            if (ids.indexOf(markerType.id) > -1) {\r\n                markerTypes.push(markerType);\r\n            }\r\n        }\r\n\r\n        return markerTypes;\r\n    }\r\n}","import { MarkerType } from \"../marker-types/marker-type\";\r\n\r\nexport class Marker {\r\n    id: number;\r\n    marker_name: string;\r\n    map_region_id: number;\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    source: string;\r\n    marker_type_id: number;\r\n    type: MarkerType;\r\n    marker_category_id: number;\r\n    marker_sub_category_id: number;\r\n\r\n    constructor (marker: {\r\n        id: number,\r\n        marker_name: string,\r\n        map_region_id: number,\r\n        x: number,\r\n        y: number,\r\n        z: number,\r\n        source: string,\r\n        marker_type_id: number,\r\n        type: MarkerType,\r\n        marker_category_id: number,\r\n        marker_sub_category_id: number\r\n    }) {\r\n        this.id = marker.id;\r\n        this.marker_name = marker.marker_name;\r\n        this.map_region_id = marker.map_region_id;\r\n        this.x = marker.x;\r\n        this.y = marker.y;\r\n        this.z = marker.z;\r\n        this.source = marker.source;\r\n        this.marker_type_id = marker.marker_type_id;\r\n        this.type = marker.type;\r\n        this.marker_category_id = marker.marker_category_id;\r\n        this.marker_sub_category_id = marker.marker_sub_category_id;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Marker } from \"./marker\";\r\nimport { Subject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MarkersService {\r\n    selectedMarker: Marker;\r\n    onMarkerSelected = new Subject<Marker>();\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    getMarkers (filter?: any[]) {\r\n        let params = (filter)\r\n            ? { filter: filter }\r\n            : {};\r\n\r\n        return this.http.get<Marker[]>('/markers', {\r\n            params\r\n        })\r\n            .pipe(map(\r\n                (markers) => {\r\n                    for (let marker in markers) {\r\n                        if (markers.hasOwnProperty(marker)) {\r\n                            markers[marker] = new Marker(markers[marker]);\r\n                            markers[marker].id = parseInt(marker);\r\n                        }\r\n                    }\r\n\r\n                    return markers;\r\n                }\r\n            ))\r\n    }\r\n\r\n    setSelectedMarker(marker: Marker) {\r\n        if (this.selectedMarker != marker) {\r\n            this.selectedMarker = marker;\r\n            this.onMarkerSelected.next(marker);\r\n        }\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.log(err));\r\n"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./resources/assets/js/app/app.component.css","webpack:///./resources/assets/js/app/app.component.html","webpack:///./resources/assets/js/app/app.component.ts","webpack:///./resources/assets/js/app/app.module.ts","webpack:///./resources/assets/js/app/map/map.component.css","webpack:///./resources/assets/js/app/map/map.component.html","webpack:///./resources/assets/js/app/map/map.component.ts","webpack:///./resources/assets/js/app/map/map.service.ts","webpack:///./resources/assets/js/app/marker-details/marker-details.component.html","webpack:///./resources/assets/js/app/marker-details/marker-details.component.ts","webpack:///./resources/assets/js/app/marker-filter/marker-filter.component.html","webpack:///./resources/assets/js/app/marker-filter/marker-filter.component.ts","webpack:///./resources/assets/js/app/marker-types/marker-type.ts","webpack:///./resources/assets/js/app/marker-types/marker-types.service.ts","webpack:///./resources/assets/js/app/markers/markers.service.ts","webpack:///./resources/assets/js/environments/environment.ts","webpack:///./resources/assets/js/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<main id=\\\"app\\\">\\r\\n    <header id=\\\"map-header\\\">\\r\\n        <!--<div id=\\\"header-wrapper\\\">-->\\r\\n            <!--<div id=\\\"main-menu\\\" class=\\\"d-flex align-items-center\\\">-->\\r\\n                <!--<button class=\\\"btn\\\">-->\\r\\n                    <!--<div class=\\\"menu-icon flex-shrink-1\\\"></div>-->\\r\\n                <!--</button>-->\\r\\n\\r\\n                <!--<div id=\\\"search\\\" class=\\\"flex-grow-1\\\">-->\\r\\n                    <!--<input type=\\\"search\\\" id=\\\"q\\\" name=\\\"q\\\" placeholder=\\\"Hyrule Castle...\\\">-->\\r\\n                <!--</div>-->\\r\\n            <!--</div>-->\\r\\n        <!--</div>-->\\r\\n    </header>\\r\\n\\r\\n    <app-marker-filter></app-marker-filter>\\r\\n\\r\\n    <app-marker-details></app-marker-details>\\r\\n\\r\\n    <div id=\\\"loader\\\">\\r\\n        <div id=\\\"loader-orb-wrapper\\\">\\r\\n            <div id=\\\"loader-orb-0\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-1\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-2\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-3\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-4\\\" class=\\\"loader-orb\\\"></div>\\r\\n            <div id=\\\"loader-orb-5\\\" class=\\\"loader-orb\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <app-map></app-map>\\r\\n</main>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { MapService } from './map/map.service';\r\nimport { MarkerDetailsComponent } from \"./marker-details/marker-details.component\";\r\nimport { MarkerFilterComponent } from \"./marker-filter/marker-filter.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { MarkersService } from \"./markers/markers.service\";\r\nimport { MarkerTypesService } from \"./marker-types/marker-types.service\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        MapComponent,\r\n        MarkerDetailsComponent,\r\n        MarkerFilterComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule\r\n    ],\r\n    providers: [\r\n        MapService,\r\n        MarkersService,\r\n        MarkerTypesService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\\r\\n@import 'https://unpkg.com/leaflet@1.3.4/dist/leaflet.css';\\n/*@import '../../../../../node_modules/leaflet/dist/leaflet.css';*/\\n#map {\\r\\n    height: 100vh;\\r\\n    width: 100vw;\\r\\n}\"","module.exports = \"<div id=\\\"map\\\"></div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MapService } from \"./map.service\";\r\nimport * as Leaflet from 'leaflet/dist/leaflet.js';\r\n\r\n@Component({\r\n    selector: 'app-map',\r\n    templateUrl: './map.component.html',\r\n    styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n    isMapGenerated: boolean;\r\n    map;\r\n    markers = {};\r\n    selectedMarkerTypes = [100, 498, 932, 2013];\r\n    control;\r\n\r\n    constructor(private mapService: MapService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.mapService.generateMap();\r\n    }\r\n}\r\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\r\nimport * as Leaflet from 'leaflet/dist/leaflet.js';\r\nimport 'leaflet.markercluster/dist/leaflet.markercluster.js';\r\nimport { Marker } from \"../markers/marker\";\r\nimport { MarkersService } from \"../markers/markers.service\";\r\nimport { MarkerTypesService } from \"../marker-types/marker-types.service\";\r\nimport { MarkerType } from \"../marker-types/marker-type\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MapService {\r\n    map: Leaflet;\r\n\r\n    isMapGenerated = false;\r\n\r\n    onMarkerSelected = new Subject<any>();\r\n    markers = {};\r\n\r\n    selectedLayersSubscription: Subscription;\r\n    layers = {};\r\n    selectedMarkerTypes = [100, 498, 932, 2013];\r\n\r\n    constructor(\r\n        private markersService: MarkersService,\r\n        private markerTypesService: MarkerTypesService\r\n    ) {\r\n        this.markerTypesService.onSelectedMarkerTypesChanged.subscribe(\r\n            (markerTypes) => {\r\n                this.getMarkers(markerTypes);\r\n            }\r\n        )\r\n    }\r\n\r\n    generateMap() {\r\n        if (!this.isMapGenerated) {\r\n            this.map = Leaflet.map('map', {\r\n                crs: Leaflet.CRS.Simple,\r\n                continuousWorld: false,\r\n                minZoom: 0,\r\n                maxZoom: 6,\r\n                noWrap: true,\r\n                maxBoundsViscosity: 0.75,\r\n                zoomControl: false\r\n            })\r\n                .on('load', () => {\r\n                    this.isMapGenerated = true;\r\n                    this.markerTypesService.getMarkerTypes()\r\n                        .subscribe(\r\n                            (markerTypes: MarkerType[]) => {\r\n                                this.markerTypesService.setSelectedMarkerTypes(this.selectedMarkerTypes);\r\n                                this.getMarkers(this.selectedMarkerTypes);\r\n                            }\r\n                        );\r\n                })\r\n                .setView([-245.7, 156.25])\r\n                .setZoom(4);\r\n\r\n            this.map.setMaxBounds(Leaflet.LatLngBounds(\r\n                this.map.unproject([-62.5, 437.5], 0),\r\n                this.map.unproject([437.5, -62.5], 0)\r\n            ));\r\n\r\n            Leaflet.tileLayer('../hyrule/{z}/{y}/{x}.png', {\r\n                tileSize: 375\r\n            }).addTo(this.map);\r\n        }\r\n    }\r\n\r\n    getMarkers(markerTypes) {\r\n        this.selectedMarkerTypes = markerTypes;\r\n\r\n        this.markersService.getMarkers({\r\n            types: this.selectedMarkerTypes\r\n        })\r\n            .subscribe(\r\n                (markers) => {\r\n                    this.addMarkersToMap(markers);\r\n                }\r\n            );\r\n    }\r\n\r\n    clearMarkers() {\r\n        for (let layer in this.markers) {\r\n            this.markers[layer].clearLayers();\r\n            this.map.removeLayer(this.markers[layer]);\r\n        }\r\n    }\r\n\r\n    addMarkersToMap(markersData) {\r\n        this.clearMarkers();\r\n\r\n        for (let marker of markersData) {\r\n            if (!this.markers.hasOwnProperty(marker.marker_type_id.toString())) {\r\n                this.markers[marker.marker_type_id.toString()] = Leaflet.layerGroup();\r\n            }\r\n\r\n            let markerTypeGroup = this.markers[marker.marker_type_id.toString()];\r\n\r\n            if (this.selectedMarkerTypes.includes(marker.marker_type_id)) {\r\n                let newMarker = Leaflet.marker([\r\n                        -this.normalizeCoord(marker.z),\r\n                        this.normalizeCoord(marker.x)\r\n                    ],\r\n                    {\r\n                        icon: Leaflet.icon({\r\n                            iconUrl: this.markerTypesService.getIcon(marker.marker_type_id),\r\n                            iconSize: [32, 32]\r\n                        }),\r\n                        title: this.markerTypesService.getName(marker.marker_type_id),\r\n                        zIndexOffset: marker.y\r\n                    }\r\n                ).on('click', (event) => {\r\n                    this.showMarkerDetails(event.target);\r\n                });\r\n                newMarker.markerId = marker.id;\r\n                newMarker.layerId = marker.marker_type_id;\r\n\r\n                markerTypeGroup.addLayer(newMarker);\r\n                this.map.addLayer(markerTypeGroup);\r\n            } else {\r\n                console.log('removing layer: ' + markerTypeGroup);\r\n                this.map.removeLayer(markerTypeGroup);\r\n            }\r\n        }\r\n    }\r\n\r\n    showMarkerDetails(target) {\r\n        this.markersService.getMarker(target.markerId).subscribe(\r\n            (marker: Marker) => {\r\n                this.onMarkerSelected.next(marker);\r\n                this.map.panTo([\r\n                    -this.normalizeCoord(marker.z),\r\n                    this.normalizeCoord(marker.x)\r\n                ]);\r\n            }\r\n        );\r\n    }\r\n\r\n    normalizeCoord(coord: number) {\r\n        return (coord + 6000) * 0.03125\r\n    }\r\n}\r\n","module.exports = \"<aside id=\\\"marker-details\\\" [class.open]=\\\"isOpen\\\" *ngIf=\\\"selectedMarker\\\">\\r\\n    <div id=\\\"marker-details-wrapper\\\" (click)=\\\"openDetails()\\\">\\r\\n        <button id=\\\"marker-details-close\\\" class=\\\"btn\\\" (click)=\\\"closeDetails()\\\">Close</button>\\r\\n        <h3>{{ selectedMarker.type.marker_type_name }}</h3>\\r\\n\\r\\n\\r\\n\\r\\n        <div>&lt;{{ selectedMarker.x }}, {{ selectedMarker.y }}, {{ selectedMarker.z }}&gt;</div>\\r\\n\\r\\n        <!--<p>{{ selectedMarker.id }}</p>-->\\r\\n        <!--<p>{{ selectedMarker.map_region_id }}</p>-->\\r\\n        <!--<p>{{ selectedMarker.marker_name }}</p>-->\\r\\n        <!--<p>{{ selectedMarker.marker_sub_category_id }}</p>-->\\r\\n        <!--<p>{{ selectedMarker.marker_type_id }}</p>-->\\r\\n        <div class=\\\"marker-meta\\\">\\r\\n            <small>\\r\\n                <div>Marker ID: {{ selectedMarker.id }}</div>\\r\\n                <div>Source: {{ selectedMarker.source }}</div>\\r\\n            </small>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</aside>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MarkersService } from \"../markers/markers.service\";\r\nimport { Marker } from \"../markers/marker\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MapService } from \"../map/map.service\";\r\n\r\n@Component({\r\n    selector: 'app-marker-details',\r\n    templateUrl: './marker-details.component.html'\r\n})\r\nexport class MarkerDetailsComponent implements OnInit {\r\n    selectedMarker: Marker;\r\n    markerSelectSubscription: Subscription;\r\n    isOpen = false;\r\n\r\n    constructor (private mapService: MapService, private  markersService: MarkersService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.markerSelectSubscription = this.mapService.onMarkerSelected.subscribe(\r\n            (marker) => {\r\n                this.selectedMarker = marker;\r\n            }\r\n        )\r\n    }\r\n\r\n    openDetails() {\r\n        this.isOpen = true;\r\n    }\r\n\r\n    closeDetails() {\r\n        this.isOpen = false;\r\n        this.selectedMarker = null;\r\n    }\r\n}","module.exports = \"<aside id=\\\"map-modifiers\\\">\\r\\n    <button id=\\\"layers\\\" class=\\\"btn btn-primary\\\" (click)=\\\"toggleDialog()\\\">\\r\\n        <img [src]=\\\"iconHref\\\">\\r\\n    </button>\\r\\n\\r\\n    <div id=\\\"marker-filters\\\" *ngIf=\\\"isOpen\\\">\\r\\n        <main style=\\\"background: white;\\\">\\r\\n            <!--<div class=\\\"d-flex flex-wrap justify-content-between\\\">-->\\r\\n            <div>\\r\\n                <div *ngFor=\\\"let markerLayer of markerLayers; let i = index;\\\" class=\\\"layer-selector\\\" [class.selected]=\\\"markerLayer.selected\\\">\\r\\n                    <!--<label for=\\\"{{ markerLayer.id }}\\\" class=\\\"d-block text-center marker-type-label\\\">-->\\r\\n                    <label for=\\\"{{ markerLayer.id }}\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"{{ markerLayer.id }}\\\" name=\\\"{{ markerLayer.id }}\\\" (change)=\\\"toggleLayer(i)\\\"\\r\\n                               [checked]=\\\"markerLayer.selected\\\" class=\\\"\\\">\\r\\n                        <img class=\\\"marker-type-icon\\\" src=\\\"{{ markerLayer.icon }}\\\" alt=\\\"\\\">\\r\\n                        <span class=\\\"marker-type-name\\\">{{ markerLayer.marker_type_name }}</span>\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </main>\\r\\n    </div>\\r\\n</aside>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MarkerTypesService } from \"../marker-types/marker-types.service\";\r\nimport { MarkerType } from \"../marker-types/marker-type\";\r\nimport { MapService } from \"../map/map.service\";\r\n\r\n@Component({\r\n    selector: 'app-marker-filter',\r\n    templateUrl: './marker-filter.component.html'\r\n})\r\nexport class MarkerFilterComponent implements OnInit {\r\n    isOpen = false;\r\n    markerLayers = [];\r\n    selectedLayers = [];\r\n    iconHref = \"images/icons/markers/markers.svg\";\r\n\r\n    constructor(\r\n        private markerTypesService: MarkerTypesService,\r\n        private mapService: MapService\r\n    ) {}\r\n\r\n    toggleDialog() {\r\n        this.isOpen = !this.isOpen;\r\n        (this.isOpen)\r\n            ? this.iconHref = \"images/icons/markers/close.svg\"\r\n            : this.iconHref = \"images/icons/markers/markers.svg\";\r\n    }\r\n\r\n    toggleLayer(index: number) {\r\n        // console.log(this.markerLayers[index]);\r\n        this.markerLayers[index].selected = !this.markerLayers[index].selected;\r\n\r\n        if (this.markerLayers[index].selected) {\r\n            this.markerTypesService.selectMarkerType(this.markerLayers[index].id);\r\n        } else {\r\n            this.markerTypesService.unselectMarkerType(this.markerLayers[index].id);\r\n        }\r\n    }\r\n\r\n    markSelected() {\r\n        for (let markerLayer in this.markerLayers) {\r\n            this.markerLayers[markerLayer].selected = false;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.markerTypesService.getMarkerTypes()\r\n            .subscribe(\r\n                (markerTypes: MarkerType[]) => {\r\n                    this.markerLayers = markerTypes;\r\n                    this.selectedLayers = this.mapService.selectedMarkerTypes;\r\n                    this.markSelected();\r\n                }\r\n            );\r\n    }\r\n}","export class MarkerType {\r\n    id: number;\r\n    marker_type_name: string;\r\n    marker_type_slug: string;\r\n    icon: string;\r\n    marker_type_description: string;\r\n    selected: boolean;\r\n\r\n    constructor(markerType: {\r\n        id: number,\r\n        marker_type_name: string,\r\n        marker_type_slug: string,\r\n        icon: string,\r\n        marker_type_description: string,\r\n        selected?: boolean\r\n    }) {\r\n        this.id = markerType.id;\r\n        this.marker_type_name = markerType.marker_type_name;\r\n        this.marker_type_slug = markerType.marker_type_slug;\r\n        this.icon = markerType.icon;\r\n        this.marker_type_description = markerType.marker_type_description;\r\n        this.selected = markerType.selected || false;\r\n    }\r\n}","import { Injectable, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { MarkerType } from \"./marker-type\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MarkerTypesService {\r\n    markerTypes: MarkerType[] = [];\r\n    selectedMarkerTypes: number[] = [];\r\n\r\n    onSelectedMarkerTypesChanged = new Subject<number[]>();\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getMarkerTypes() {\r\n        return this.http.get<MarkerType[]>('/marker-types')\r\n            .pipe(map(\r\n                (markerTypes) => {\r\n                    for (let markerType in markerTypes) {\r\n                        if (markerTypes.hasOwnProperty(markerType)) {\r\n                            markerTypes[markerType] = new MarkerType(markerTypes[markerType]);\r\n                            this.markerTypes.push(markerTypes[markerType]);\r\n                        }\r\n                    }\r\n                    return markerTypes;\r\n                }\r\n            ));\r\n    }\r\n\r\n    selectMarkerType(id: number) {\r\n        const index = this.selectedMarkerTypes.indexOf(id);\r\n        if (index === -1) {\r\n            this.selectedMarkerTypes.push(id);\r\n            this.onSelectedMarkerTypesChanged.next(this.selectedMarkerTypes);\r\n        }\r\n    }\r\n\r\n    unselectMarkerType(id: number) {\r\n        const index = this.selectedMarkerTypes.indexOf(id);\r\n        if (index > -1) {\r\n            this.selectedMarkerTypes.splice(index, 1);\r\n            this.onSelectedMarkerTypesChanged.next(this.selectedMarkerTypes);\r\n        }\r\n    }\r\n\r\n    selectAllMarkerTypes() {\r\n\r\n    }\r\n\r\n    unselectAllMarkerTypes() {\r\n\r\n    }\r\n\r\n    setSelectedMarkerTypes(types: number[]) {\r\n        this.selectedMarkerTypes = types;\r\n        this.onSelectedMarkerTypesChanged.next(types);\r\n    }\r\n\r\n    getMarkerTypesById(ids: number[]) {\r\n        let markerTypes: MarkerType[] = [];\r\n\r\n        for (let markerType of this.markerTypes) {\r\n            if (ids.indexOf(markerType.id) > -1) {\r\n                markerTypes.push(markerType);\r\n            }\r\n        }\r\n\r\n        return markerTypes;\r\n    }\r\n\r\n    getById(id: number) {\r\n        for (let markerType of this.markerTypes) {\r\n            if (markerType.id == id) {\r\n                return markerType;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    getIcon(id) {\r\n        const markerType = this.getById(id);\r\n        return markerType.icon;\r\n    }\r\n\r\n    getName(id) {\r\n        const markerType = this.getById(id);\r\n        return markerType.marker_type_name;\r\n    }\r\n}","import { Injectable, OnInit } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Marker } from \"./marker\";\r\nimport { Subject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MarkerTypesService } from \"../marker-types/marker-types.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MarkersService {\r\n    constructor(\r\n        private http: HttpClient,\r\n    ) {\r\n    }\r\n\r\n    getMarkers(options?: { types: number[] }) {\r\n        const types = options.types.join(',');\r\n\r\n        return this.http.get<Marker[]>('/markers?types=' + types)\r\n            .pipe(map(\r\n                (markers) => {\r\n                    return markers;\r\n                }\r\n            ));\r\n    }\r\n\r\n    getMarker(id: number) {\r\n        return this.http.get<Marker>('/markers/' + id)\r\n            .pipe(map(\r\n                (marker) => {\r\n                    return marker;\r\n                }\r\n            ));\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.log(err));\r\n"],"sourceRoot":""}
>>>>>>> feature/fetch-markers
